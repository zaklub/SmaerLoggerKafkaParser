server:
  port: 8080

spring:
  application:
    name: kafka-parsing
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:businessinsight}
    username: ${DB_USERNAME:audituser}
    password: ${DB_PASSWORD:manage}
    driver-class-name: org.postgresql.Driver
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 5
      buffer-memory: 33554432
      properties:
        # Override advertised listeners for local development
        metadata.broker.list: localhost:9092
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP:local-dev-consumer}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: true
      properties:
        spring.json.trusted.packages: "*"
        # Override advertised listeners for local development
        metadata.broker.list: localhost:9092

  # Elasticsearch Configuration
  elasticsearch:
    host: ${ELASTICSEARCH_HOST:localhost}
    port: ${ELASTICSEARCH_PORT:9200}
    connection-timeout: 5000
    socket-timeout: 60000

# Audit Data Processor Configuration
audit:
  processor:
    timeout-minutes: 1  # How long to wait for Request/Response correlation
    cleanup-interval-minutes: 5  # How often to cleanup old completed transactions

# Logging Configuration
logging:
  level:
    com.example.kafkaparsing: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
